{"version":3,"sources":["components/Sudoku/Sudoku.module.css","components/Sudoku/SudokuRows/SudokuRows.module.css","components/Menu/Menu.module.css","components/Menu/MobileMenu.module.css","components/Profile/MyPosts/MyPosts.module.css","components/RouteGenerator/RouteGenerator.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Logo/Logo.module.css","components/Gallery/Image/Image.module.css","components/Articles/Articles.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Emoji/Emoji.module.css","components/Gallery/Gallery.module.css","components/Sudoku/yinAndYang.png","components/Sudoku/winner.gif","redux/Images sync /^/.*/.jpg$","redux/Images/adventure.jpg","redux/Images/alpine.jpg","redux/Images/armadillo.jpg","redux/Images/brewery.jpg","redux/Images/cami.jpg","redux/Images/clouds.jpg","redux/Images/cooling-tower.jpg","redux/Images/geese.jpg","redux/Images/hosta-leaf.jpg","redux/Images/landscape.jpg","redux/Images/night.jpg","redux/Images/parrot.jpg","redux/Images/sailing-vessel.jpg","redux/Images/snail.jpg","redux/Images/squirrel.jpg","redux/Images/vintage.jpg","redux/Images/vw.jpg","redux/profile-reducer.js","redux/messages-reducer.js","redux/gallery-reducer.js","redux/sudoku-reducer.js","redux/redux-store.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Menu/Menu.js","components/Emoji/Emoji.js","components/Menu/MobileMenu.js","components/Logo/Logo.js","components/Header/Header.js","components/RouteGenerator/RouteGenerator.js","components/Gallery/Image/Image.js","components/Gallery/Gallery.js","components/Gallery/GalleryContainer.js","components/Sudoku/SudokuRows/SudokuCells.js","components/Sudoku/SudokuRows/SudokuRows.js","components/Sudoku/Sudoku.js","components/Sudoku/SudokuContainer.js","components/Articles/Articles.js","App.js","index.js"],"names":["module","exports","sudokuContainer","heading","loader","gameWon","no-spinning","spinning","spin","buttonsBlock","showLoading","disabled","grid","row","cell","guessedCorrectly","guessedWrong","shake","nav","item","active","logo","postAdd","inputContainer","textAreaContainer","bubbleHelp","container","difficulties","buttons","generator","map","user","imageBlock","userInfo","profileBackgroundPicture","header","logoContainer","logoOuter","logoInner","imageContainer","image","articles","post","emoji","images","__webpack_require__","p","./adventure.jpg","./alpine.jpg","./armadillo.jpg","./brewery.jpg","./cami.jpg","./clouds.jpg","./cooling-tower.jpg","./geese.jpg","./hosta-leaf.jpg","./landscape.jpg","./night.jpg","./parrot.jpg","./sailing-vessel.jpg","./snail.jpg","./squirrel.jpg","./vintage.jpg","./vw.jpg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","initialState","posts","date","message","newPostText","tooltip","profileReducer","state","arguments","length","undefined","action","type","copiedState","objectSpread","newText","newPost","Date","toLocaleString","trim","toConsumableArray","push","conversations","name","dialogues","newMessageBody","messagesReducer","body","pictureName","galleryReducer","isLoading","gameStarted","gameChecked","numberOfMistakes","gameFinished","sudokuReducer","getRandomNumber","min","max","Math","floor","random","transposeGrid","gridLine","i","j","transposedGrid","swapRows","randomLine","temp","splice","randomPosition","apply","concat","swapRowAreas","rand","sudokuFuncs","transposedSwappedGrid","gappedGrid","gapsNumber","randLine","randElement","tempObject","value","userGuess","changeable","makeGaps","functionsArray","minChangesNumber","maxChangesNumber","timesToChange","finalGrid","randomiseGrid","initialLine","y","newGrid","slice","createBasicGrid","cellLocation","index","input","userInput","test","console","log","boolean","x","reducers","combineReducers","profilePage","messagesPage","galleryPage","sudokuPage","store","createStore","Post","props","react_default","a","createElement","className","s","MyPosts","postsElements","el","MyPosts_Post_Post","key","onChange","event","text","target","updatePostText","placeholder","onClick","addPost","reverse","MyPostsContainer","connect","dispatch","updatePostTextActionCreator","Profile","content","src","alt","MyPosts_MyPostsContainer","Menu","react_router_dom","to","activeClassName","Emoji","role","aria-label","label","aria-hidden","symbol","MobileMenu","components_Emoji_Emoji","Logo","Header","_useState","useState","_useState2","slicedToArray","toggleMenu","setToggleMenu","_useState3","_useState4","isMobile","setIsMobile","width","window","innerWidth","useEffect","headerContainer","components_Logo_Logo","Menu_MobileMenu","components_Menu_Menu","mapState","center","zoom","controls","RouteGenerator","address","route","randomiseCoordinates","setEasy","_this","updateRoute","setMedium","onYmapsLoad","ymaps","geoObjects","remove","setState","mapStateAutoApply","routingMode","multiRoute","then","add","error","alert","_this2","this","react_yandex_maps_umd_production_min","query","load","apikey","onLoad","instanceRef","React","Component","Image","require","Gallery","imageElements","Gallery_Image_Image","GalleryContainer","SudokuCells","changeCell","number","position","cells","toString","autoComplete","given","SudokuRows","rows","SudokuRows_SudokuCells","Sudoku","showGrid","createGrid","resetSudoku","checkSudoku","checkAnswers","Fragment","endGamePicture","Sudoku_SudokuRows_SudokuRows","SudokuContainer","location","toggleStartButton","Events","hits","data","setData","setQuery","_useState5","_useState6","url","setUrl","_useState7","_useState8","setIsLoading","_useState9","_useState10","isError","setIsError","uniqueId","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","t0","stop","fetchData","articlesHeader","some","href","rel","title","App","components_Header_Header","react_router","exact","path","render","components_Profile_Profile","components_RouteGenerator_RouteGenerator","Gallery_GalleryContainer","Sudoku_SudokuContainer","Articles","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ecfdc167.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sudokuContainer\":\"Sudoku_sudokuContainer__1T-UZ\",\"heading\":\"Sudoku_heading__2qscJ\",\"loader\":\"Sudoku_loader__hO3A6\",\"gameWon\":\"Sudoku_gameWon__3dzRb\",\"no-spinning\":\"Sudoku_no-spinning__3UGnF\",\"spinning\":\"Sudoku_spinning__2YiZY\",\"spin\":\"Sudoku_spin__1bpX6\",\"buttonsBlock\":\"Sudoku_buttonsBlock__3gIMV\",\"showLoading\":\"Sudoku_showLoading__2mZm0\",\"disabled\":\"Sudoku_disabled__26S0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"SudokuRows_grid__1H0RZ\",\"row\":\"SudokuRows_row__35wDV\",\"cell\":\"SudokuRows_cell__1u8nr\",\"guessedCorrectly\":\"SudokuRows_guessedCorrectly__DthSD\",\"guessedWrong\":\"SudokuRows_guessedWrong__3Eqaq\",\"shake\":\"SudokuRows_shake__24YpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__GeFvv\",\"item\":\"Menu_item__1xNPZ\",\"active\":\"Menu_active__1Wumc\",\"logo\":\"Menu_logo__dzRIK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"MobileMenu_nav__2E46T\",\"item\":\"MobileMenu_item__OjhCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postAdd\":\"MyPosts_postAdd__22l-3\",\"inputContainer\":\"MyPosts_inputContainer__2qTV1\",\"textAreaContainer\":\"MyPosts_textAreaContainer__1r8CC\",\"bubbleHelp\":\"MyPosts_bubbleHelp__1tCZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RouteGenerator_container__i4Xn6\",\"difficulties\":\"RouteGenerator_difficulties__1F_8S\",\"buttons\":\"RouteGenerator_buttons__LAu-k\",\"generator\":\"RouteGenerator_generator__cSuJ-\",\"map\":\"RouteGenerator_map__11rLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Profile_user__2VHXv\",\"imageBlock\":\"Profile_imageBlock__1j2kU\",\"userInfo\":\"Profile_userInfo__3GO_1\",\"profileBackgroundPicture\":\"Profile_profileBackgroundPicture__3pPwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3tUQg\",\"logoContainer\":\"Header_logoContainer__2CEhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__3Pdzu\",\"logoOuter\":\"Logo_logoOuter__123JA\",\"logoInner\":\"Logo_logoInner__dhQfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"Image_imageContainer__3Y7h3\",\"image\":\"Image_image__132kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articles\":\"Articles_articles__2HHkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__wUXlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emoji\":\"Emoji_emoji__3OcIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"Gallery_images__1alOp\"};","module.exports = __webpack_public_path__ + \"static/media/yinAndYang.6245036f.png\";","module.exports = __webpack_public_path__ + \"static/media/winner.9d9a0109.gif\";","var map = {\n\t\"./adventure.jpg\": 75,\n\t\"./alpine.jpg\": 76,\n\t\"./armadillo.jpg\": 77,\n\t\"./brewery.jpg\": 78,\n\t\"./cami.jpg\": 79,\n\t\"./clouds.jpg\": 80,\n\t\"./cooling-tower.jpg\": 81,\n\t\"./geese.jpg\": 82,\n\t\"./hosta-leaf.jpg\": 83,\n\t\"./landscape.jpg\": 84,\n\t\"./night.jpg\": 85,\n\t\"./parrot.jpg\": 86,\n\t\"./sailing-vessel.jpg\": 87,\n\t\"./snail.jpg\": 88,\n\t\"./squirrel.jpg\": 89,\n\t\"./vintage.jpg\": 90,\n\t\"./vw.jpg\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;","module.exports = __webpack_public_path__ + \"static/media/adventure.69353439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alpine.a856e1d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/armadillo.a4b55498.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brewery.69899df3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cami.e06ceeb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.7ca93eac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cooling-tower.5cd59bc5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geese.785f2bd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hosta-leaf.c5a2ba3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landscape.ee25fee9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night.3ede16b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parrot.8b4d8100.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sailing-vessel.a3ba975a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snail.fe153fa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squirrel.7d8655b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vintage.e0152533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vw.7167b10e.jpg\";","const addPost = 'ADD-POST';\r\nconst updatePostText = 'UPDATE-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, date: '26.05.2019, 16:35:56', message: 'Мой первый пост. Тест'},\r\n        {\r\n            id: 2,\r\n            date: '27.05.2019, 11:31:56',\r\n            message: 'В прошлом посту забыл точку. Поэтому добавлю две в конце этого..'\r\n        },\r\n        {id: 3, date: '28.05.2019, 15:11:54', message: 'Добавил супер страшный скролл, зато крутить можно!'}\r\n    ],\r\n    newPostText: '',\r\n    tooltip: false\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case updatePostText: {\r\n            let copiedState = {...state};\r\n            copiedState.newPostText = action.newText;\r\n            if (copiedState.newPostText.length > 0) {\r\n                copiedState.tooltip = false;\r\n            }\r\n            return copiedState;\r\n        }\r\n        case addPost: {\r\n            let copiedState = {...state};\r\n            let newPost = {\r\n                id: copiedState.posts.length + 1,\r\n                date: new Date().toLocaleString('ru'),\r\n                message: copiedState.newPostText\r\n            };\r\n            if (copiedState.newPostText.length > 0 && copiedState.newPostText.trim() !== '') {\r\n                copiedState.posts = [...state.posts];\r\n                copiedState.posts.push(newPost);\r\n                copiedState.newPostText = '';\r\n                return copiedState;\r\n            } else {\r\n                copiedState.tooltip = true;\r\n                return copiedState;\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: addPost});\r\n\r\nexport const updatePostTextActionCreator = (text) => ({type: updatePostText, newText: text});\r\n\r\nexport default profileReducer;","const updateMessageBody = 'UPDATE-MESSAGE-BODY';\r\nconst sendMessage = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    conversations: [\r\n        {id: 1, name: 'Mark'},\r\n        {id: 2, name: 'Bob'},\r\n        {id: 3, name: 'Julia'},\r\n    ],\r\n    dialogues: [\r\n        {id: 1, message: 'Hello!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Have you watched Avengers?'},\r\n        {id: 4, message: 'Wow!'},\r\n    ],\r\n    newMessageBody: ''\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case updateMessageBody: {\r\n            let copiedState = {...state};\r\n            copiedState.newMessageBody = action.body;\r\n            return copiedState;\r\n        }\r\n        case sendMessage: {\r\n            let copiedState = {...state};\r\n            copiedState.dialogues = [...state.dialogues];\r\n            let body = copiedState.newMessageBody;\r\n            copiedState.dialogues.push({id: 6, message: body});\r\n            copiedState.newMessageBody = '';\r\n            return copiedState;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const updateBodyMessageCreator = (body) =>  ({type: updateMessageBody, body: body });\r\nexport const sendMessageCreator = () => ({type: sendMessage});\r\n\r\nexport default messagesReducer;","const showPictureName = 'SHOW-PICTURE-NAME';\r\n\r\nlet initialState = {\r\n    images: [\r\n        {id: 1, name: 'adventure'},\r\n        {id: 2, name: 'alpine'},\r\n        {id: 3, name: 'armadillo'},\r\n        {id: 4, name: 'brewery'},\r\n        {id: 5, name: 'cami'},\r\n        {id: 6, name: 'clouds'},\r\n        {id: 7, name: 'cooling-tower'},\r\n        {id: 9, name: 'geese'},\r\n        {id: 10, name: 'hosta-leaf'},\r\n        {id: 11, name: 'landscape'},\r\n        {id: 12, name: 'night'},\r\n        {id: 13, name: 'parrot'},\r\n        {id: 14, name: 'sailing-vessel'},\r\n        {id: 15, name: 'snail'},\r\n        {id: 16, name: 'squirrel'},\r\n        {id: 17, name: 'vintage'},\r\n        {id: 18, name: 'vw'}\r\n    ],\r\n    pictureName: ''\r\n};\r\n\r\nconst galleryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case showPictureName: {\r\n            let copiedState = {...state};\r\n            copiedState.pictureName = !copiedState.pictureName;\r\n            return copiedState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const showPictureNameCreator = () => ({type: showPictureName});\r\n\r\n\r\nexport default galleryReducer;","const RESET_SUDOKU = 'RESET_SUDOKU';\r\nconst CREATE_GRID = 'CREATE_GRID';\r\nconst CHANGE_CELL = 'CHANGE_CELL';\r\nconst TOGGLE_START_BUTTON = 'TOGGLE_START_BUTTON';\r\nconst CHECK_ANSWERS = 'CHECK_ANSWERS';\r\nlet initialState = {\r\n    grid: [],\r\n    isLoading: true,\r\n    gameStarted: false,\r\n    gameChecked: false,\r\n    numberOfMistakes: 0,\r\n    gameFinished: false\r\n};\r\n\r\nconst sudokuReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_GRID: {\r\n            let copiedState = {...state};\r\n\r\n            function createBasicGrid() {\r\n                let newGrid = [];\r\n                var blockNums = 3;\r\n                var linesNums = 3;\r\n                var maxNumberOfLineElements = 9;\r\n                var initialLine, temp;\r\n                var j, i, y;\r\n\r\n                for (j = 0; j < blockNums; j++) {\r\n                    initialLine = [];\r\n                    for (y = 1; y <= maxNumberOfLineElements; y++) {\r\n                        var tempObject = {};\r\n                        tempObject.value = y;\r\n                        initialLine.push(tempObject);\r\n                    }\r\n                    initialLine = initialLine.concat(initialLine.splice(0, j));\r\n                    temp = [...initialLine];\r\n                    for (i = 0; i < linesNums; i++) {\r\n                        newGrid.push(temp);\r\n                        temp = temp.slice(3).concat(temp.slice(0, 3));\r\n                    } \r\n                }\r\n                return newGrid;\r\n            }\r\n\r\n\r\n            function getRandomNumber(min, max) {\r\n                var randomNumber = Math.floor(min + Math.random() * (max + 1 - min));\r\n                return randomNumber;\r\n            }\r\n            \r\n            function transposeGrid(grid) {\r\n                var transposedGrid = [];\r\n                var gridLine;\r\n                var i, j;\r\n\r\n                for (i = 0; i < grid.length; i++) {\r\n                    gridLine = [];\r\n                    for (j = 0; j < grid.length; j++) {\r\n                        gridLine.push(grid[j][i]);\r\n                    }\r\n                    transposedGrid.push(gridLine);\r\n                }\r\n                return transposedGrid;\r\n            }\r\n\r\n            function swapRows(grid) {\r\n                var i;\r\n                for (i = 0; i < grid.length; i += 3) {\r\n                    var randomLine = getRandomNumber(i, i + 2);\r\n                    var temp = grid.splice(randomLine, 1);\r\n                    var randomPosition = getRandomNumber(i, i + 1);\r\n                    grid.splice(randomPosition, 0, ...temp);\r\n                }\r\n                return grid;\r\n            }\r\n\r\n            function swapColumns(grid) {\r\n                var transposedGrid = transposeGrid(grid);\r\n\r\n                var transposedSwappedGrid = swapRows(transposedGrid);\r\n\r\n                var swappedColumnsGrid = transposeGrid(transposedSwappedGrid);\r\n\r\n                return swappedColumnsGrid;\r\n            }\r\n\r\n            function swapRowAreas(grid) {\r\n                var temp,\r\n                    rand,\r\n                    i;\r\n\r\n                for (i = 0; i < grid.length; i = i + 3) {\r\n                    temp = grid.splice(i, i + 3);\r\n                    rand = getRandomNumber(0, 2) * 3;\r\n                    grid.splice(rand, 0, ...temp);\r\n                }\r\n                \r\n                return grid;\r\n            }\r\n\r\n            function swapColumnAreas(grid) {\r\n                var transposedGrid = transposeGrid(grid);\r\n\r\n                var transposedSwappedGrid = swapRowAreas(transposedGrid);\r\n\r\n                var swappedColumnAreasGrid = transposeGrid(transposedSwappedGrid);\r\n\r\n                return swappedColumnAreasGrid;\r\n\r\n            }\r\n\r\n            var sudokuFuncs = [transposeGrid, \r\n                                swapRows, \r\n                                swapColumns, \r\n                                swapRowAreas, \r\n                                swapColumnAreas];\r\n\r\n            function randomiseGrid(grid, functionsArray, minChangesNumber, maxChangesNumber) {\r\n                var timesToChange = getRandomNumber(minChangesNumber, maxChangesNumber);\r\n                var randomFunctionNumber;\r\n                var finalGrid = grid;\r\n                var newGrid,\r\n                    i;\r\n\r\n                for (i = 0; i < timesToChange; i++) {\r\n                    randomFunctionNumber = getRandomNumber(0, functionsArray.length - 1);\r\n                    newGrid = functionsArray[randomFunctionNumber](finalGrid);\r\n                    finalGrid = newGrid;\r\n                }  \r\n                \r\n                return finalGrid;\r\n            }\r\n\r\n            function makeGaps(grid, gapsNumber) {\r\n                var maxGapsNumber = 80;\r\n                var randLine,\r\n                    randElement,\r\n                    i;\r\n\r\n                if(gapsNumber < maxGapsNumber) {\r\n                    for (i = 1; i <= gapsNumber; i++) {\r\n                        randLine = getRandomNumber(0, grid.length - 1);\r\n                        randElement = getRandomNumber(0, grid[0].length - 1);\r\n                        if (grid[randLine][randElement]) {\r\n                            var tempObject = {\r\n                            value: grid[randLine][randElement].value,\r\n                            userGuess: '',\r\n                            changeable: true,\r\n                            guessedCorrectly: false\r\n                            };\r\n                            grid[randLine].splice(randElement, 1, tempObject);\r\n                        } else {\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n                return grid;\r\n            }\r\n\r\n            let basicGrid = createBasicGrid();\r\n            let randomGrid = randomiseGrid(basicGrid, sudokuFuncs, 100, 200);\r\n            let gappedGrid = makeGaps(randomGrid, 2);\r\n            copiedState.grid = gappedGrid;\r\n            copiedState.isLoading = false;\r\n            copiedState.gameStarted = true;\r\n                \r\n            return copiedState;\r\n        }\r\n        case RESET_SUDOKU: {\r\n            let copiedState = {...state};\r\n            copiedState.grid = [];\r\n            copiedState.isLoading = true;\r\n            copiedState.gameStarted = false;\r\n            copiedState.gameChecked = false;\r\n            copiedState.numberOfMistakes = 0;\r\n            copiedState.gameFinished = false;\r\n            return copiedState;\r\n        }\r\n        case CHANGE_CELL: {\r\n            let copiedState = {...state};\r\n            copiedState.grid = [...state.grid];\r\n            if (copiedState.grid.length > 0) {\r\n                for (let i = 0; i < copiedState.grid.length; i++) {\r\n                    copiedState.grid[i] = [...state.grid[i]];\r\n                    for (let j = 0; j < copiedState.grid[i].length; j++) {\r\n                        copiedState.grid[i][j] = {...state.grid[i][j]};\r\n                    }\r\n                }\r\n            }\r\n\r\n            let row = +action.cellLocation.slice(0, 1);\r\n            let index = +action.cellLocation.slice(1);\r\n            let input = action.userInput;\r\n            let acceptedRange = /[1-9]/;\r\n            if ((acceptedRange.test(input) || !input) && input.length < 2) {\r\n                copiedState.grid[row][index].userGuess = input;\r\n            } else {\r\n                console.log('It must be a number from 1 to 9!');\r\n            }\r\n            return copiedState;\r\n        }\r\n        case TOGGLE_START_BUTTON: {\r\n            let copiedState = {...state};\r\n            copiedState.gameStarted = action.boolean;\r\n            return copiedState;\r\n        }\r\n        case CHECK_ANSWERS: {\r\n            let copiedState = {...state};\r\n            copiedState.numberOfMistakes = 0;\r\n            copiedState.grid = [...state.grid];\r\n            if (copiedState.grid.length > 0) {\r\n                for (let i = 0; i < copiedState.grid.length; i++) {\r\n                    copiedState.grid[i] = [...state.grid[i]];\r\n                    for (let j = 0; j < copiedState.grid[i].length; j++) {\r\n                        copiedState.grid[i][j] = {...state.grid[i][j]};\r\n                    }\r\n                }\r\n            }\r\n            for (let x = 0; x < copiedState.grid.length; x++) {\r\n                for (let y = 0; y < copiedState.grid[x].length; y++) {\r\n                    if (copiedState.grid[x][y].userGuess || copiedState.grid[x][y].userGuess === '') {\r\n                        if (copiedState.grid[x][y].userGuess != copiedState.grid[x][y].value) {\r\n                            copiedState.numberOfMistakes++;\r\n                            copiedState.grid[x][y].guessedCorrectly = false;\r\n                        } else {\r\n                            copiedState.grid[x][y].guessedCorrectly = true;\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n            if (!copiedState.numberOfMistakes) {\r\n                copiedState.gameFinished = true;\r\n            }\r\n            copiedState.gameChecked = true;\r\n            \r\n            return copiedState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const createGrid = () => ({type: CREATE_GRID});\r\nexport const resetSudoku = () => ({type: RESET_SUDOKU});\r\nexport const changeCell = (number, location) => ({\r\n    type: CHANGE_CELL, userInput: number, cellLocation: location});\r\nexport const toggleStartButton = () => ({type: TOGGLE_START_BUTTON});\r\nexport const checkAnswers = () => ({type: CHECK_ANSWERS});\r\n\r\nexport default sudokuReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport galleryReducer from \"./gallery-reducer\";\r\nimport sudokuReducer from \"./sudoku-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        messagesPage: messagesReducer,\r\n        galleryPage: galleryReducer,\r\n        sudokuPage: sudokuReducer\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <p>{props.date}</p>\r\n            <br />\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map((el) => (\r\n        <Post message={el.message} date={el.date} key={el.id}/>\r\n    ));\r\n\r\n    let onPostChange = (event) => {\r\n        let text = event.target.value;\r\n        props.updatePostText(text);\r\n    };\r\n\r\n    let onPostAdd = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.postAdd}>\r\n                <h1>Мои посты</h1>\r\n                <div className={s.inputContainer}>\r\n                    <div className={s.textAreaContainer}>\r\n                            <textarea onChange={onPostChange}\r\n                                      value={props.newPostText}\r\n                                      placeholder='(!)Важное сообщение'/>\r\n                        <span>\r\n                        {props.tooltip ?\r\n                            <div className={s.bubbleHelp}>\r\n                                <p>Не надо пустых постов!</p>\r\n                            </div> :\r\n                            ''}\r\n                        </span>\r\n                    </div>\r\n                    <button onClick={onPostAdd}>Добавить</button>\r\n                </div>\r\n            </div>\r\n            {postsElements.reverse()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import {\r\n    addPostActionCreator,\r\n    updatePostTextActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        tooltip: state.profilePage.tooltip\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePostText: (text) => {\r\n            dispatch(updatePostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.user}>\r\n                <div className={s.imageBlock}>\r\n                    <img src='https://www.zaryadyepark.ru/upload/iblock/d65/d65abfbf1d6f83c1765b734c47c79cb5.jpg' alt=''/>\r\n                </div>\r\n                <div className={s.userInfo}>\r\n                    <h1>Информация обо мне:</h1>\r\n                    <p>Нелучшая моя фотография, но какая есть! Зато видно,\r\n                        что я работаю непокладая рук, а иногда и ног!</p>\r\n                </div>\r\n            </div>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Menu.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Профиль</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/route-generator' activeClassName={s.active}>Карта</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/gallery' activeClassName={s.active}>Галлерея</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/sudoku' activeClassName={s.active}>Судоку</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/articles' activeClassName={s.active}>Статьи</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport s from './Emoji.module.css';\r\n\r\nconst Emoji = props => (\r\n    <span\r\n        className={s.emoji}\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\n\r\nexport default Emoji;","import React from 'react';\r\nimport s from './MobileMenu.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Emoji from './../Emoji/Emoji.js';\r\n\r\nconst MobileMenu = () => {\r\n\treturn (\r\n\t\t<nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>\r\n                \t<Emoji label='profile' symbol='🐵'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/route-generator' activeClassName={s.active}>\r\n\t\t\t\t\t<Emoji label='routes' symbol='🚶'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/gallery' activeClassName={s.active}>\r\n                \t<Emoji label='gallery' symbol='📷'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/sudoku' activeClassName={s.active}>\r\n                \t<Emoji label='sudoku' symbol='🉐'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/articles' activeClassName={s.active}>\r\n                \t<Emoji label='articles' symbol='📒'/>\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n\t)\r\n}\r\n\r\nexport default MobileMenu;","import React from 'react';\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n\r\n\treturn (\r\n\t\t<div className={s.logo}>\r\n\t\t\t<div className={s.logoOuter}>\r\n\t\t\t\t<div className={s.logoInner}></div>\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import React, { useState, useEffect } from 'react';\r\nimport s from './Header.module.css';\r\nimport Menu from './../Menu/Menu.js';\r\nimport MobileMenu from './../Menu/MobileMenu.js';\r\nimport Logo from './../Logo/Logo.js';\r\n\r\nconst Header = () => {\r\n\tconst [toggleMenu, setToggleMenu] = useState(false);\r\n\tconst [isMobile, setIsMobile] = useState(false);\r\n\r\n\tconst changeMenu = () => {\r\n\t\t\ttoggleMenu ? setToggleMenu(false) : setToggleMenu(true);\r\n\t\t}\r\n\tlet width = window.innerWidth;\r\n\r\n\tuseEffect(() => {\r\n\t\twidth <= 600 ? setIsMobile(true) : setIsMobile(false);\r\n\t}, [width])\r\n\r\n    return (\r\n    \t<div className={s.headerContainer}>\r\n\t\t\t<header className={s.header}>\r\n\t\t\t\t<div className={s.logoContainer} onClick={changeMenu}>\r\n\t            \t<Logo />\r\n\t            </div>\r\n\t            {isMobile && toggleMenu ? <MobileMenu /> : <Menu />}\r\n\t\t\t</header>\r\n    \t</div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {YMaps, Map} from 'react-yandex-maps';\r\nimport s from './RouteGenerator.module.css'\r\n\r\nconst mapState = {\r\n    center: [55.751574, 37.618960],\r\n    zoom: 11,\r\n    controls: []\r\n};\r\n\r\nclass RouteGenerator extends React.Component {\r\n    state = {\r\n        address: [],\r\n        route: null\r\n    };\r\n\r\n    randomiseCoordinates = (min, max) =>  {\r\n        return  min + Math.random() * (max - min);\r\n    };\r\n\r\n    setEasy = () => {\r\n        this.state.address = [\r\n            [this.randomiseCoordinates(55.72, 55.77), this.randomiseCoordinates(37.58, 37.63)],\r\n            [this.randomiseCoordinates(55.72, 55.77), this.randomiseCoordinates(37.58, 37.63)]\r\n        ];\r\n        this.updateRoute(this.state.address);\r\n    };\r\n\r\n    setMedium = () => {\r\n        this.state.address = [\r\n            [this.randomiseCoordinates(55.70, 55.79), this.randomiseCoordinates(37.56, 37.65)],\r\n            [this.randomiseCoordinates(55.70, 55.79), this.randomiseCoordinates(37.56, 37.65)]\r\n        ];\r\n        this.updateRoute(this.state.address);\r\n    };\r\n\r\n    onYmapsLoad = ymaps => {\r\n        this.ymaps = ymaps;\r\n    };\r\n\r\n    updateRoute = address => {\r\n        if (this.state.route) {\r\n            this.map.geoObjects.remove(this.state.route);\r\n        }\r\n        this.setState(\r\n            {\r\n                address,\r\n                route: null\r\n            },\r\n            () => {\r\n                const address = this.state.address;\r\n                if (address.length > 1) {\r\n                    this.ymaps\r\n                        .route(address, {\r\n                            mapStateAutoApply: true,\r\n                            routingMode: 'pedestrian',\r\n                            multiRoute: true\r\n                        })\r\n                        .then(\r\n                            route => {\r\n                                this.map.geoObjects.add(route);\r\n                                this.setState({ route });\r\n                            },\r\n                            error => alert(error.message)\r\n                        );\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.container}>\r\n                <div className={s.difficulties}>\r\n                    <p>Случайный маршрут по Москве!</p>\r\n                    <div className={s.buttons}>\r\n                        <button onClick={this.setEasy}>Легкий</button>\r\n                        <button onClick={this.setMedium}>Средний</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.container}>\r\n                    <p>Удачи в новом маршруте!</p>\r\n                    <YMaps query={{\r\n                            load: \"package.full\", \r\n                            apikey: \"6dcad05d-5db3-4d4c-a137-ce3f7b46a1bb\" }}>\r\n                        <Map\r\n                            state={mapState}\r\n                            onLoad={this.onYmapsLoad}\r\n                            instanceRef={map => (this.map = map)}\r\n                            className={s.map}\r\n                        />\r\n                    </YMaps>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouteGenerator;\r\n\r\n","import React from 'react';\r\nimport s from './Image.module.css';\r\n\r\nconst Image = (props) => {\r\n    return (\r\n        <div className={s.imageContainer}>\r\n            <img src={require('../../../redux/Images/' + props.name + '.jpg')} alt='' className={s.image} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport s from './Gallery.module.css';\r\nimport Image from \"./Image/Image\";\r\n\r\nconst Gallery = (props) => {\r\n    let imageElements = props.images.map((el) => <Image name={el.name} key={el.id}/>);\r\n    return (\r\n            <div className={s.images}>\r\n                {imageElements}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Gallery;","\r\nimport Gallery from \"./Gallery\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        images: state.galleryPage.images\r\n    }\r\n};\r\n\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePostText: (text) => {\r\n            dispatch(updatePostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        toggleTooltip: () => {\r\n            dispatch(toggleTooltipCreator());\r\n        }\r\n    }\r\n};\r\n*/\r\n\r\nconst GalleryContainer = connect(mapStateToProps, {})(Gallery);\r\n\r\n\r\nexport default GalleryContainer;","import React from \"react\";\r\nimport s from \"./SudokuRows.module.css\";\r\n\r\nconst SudokuCells = (props) => {\r\n\r\n\tlet changeCell = (event) => {\r\n\t\tlet number = event.target.value;\r\n\t\tlet position = event.target.id;\r\n\t\tprops.changeCell(number, position);\r\n\t}\r\n\r\n\r\n\tlet cells = props.row.map((el, index) => {\r\n\t\tif (!props.gameChecked) {\r\n\t\t\tif (el.changeable) {\r\n\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.userGuess} \r\n\t\t\t\t\tclassName={s.cell} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} />\r\n\t\t\t} else {\r\n\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.value} \r\n\t\t\t\t\tclassName={s.cell} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} \r\n\t\t\t\t\tdisabled />\r\n\t\t\t}\t\t\r\n\t\t} else {\r\n\t\t\tif (el.changeable) {\r\n\t\t\t\tif (el.guessedCorrectly) {\r\n\t\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.userGuess} \r\n\t\t\t\t\tclassName={`${s.cell} ${s.guessedCorrectly}`} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} />\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.userGuess} \r\n\t\t\t\t\tclassName={`${s.cell} ${s.guessedWrong}`} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} />\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.value} \r\n\t\t\t\t\tclassName={`${s.cell} ${s.given}`} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} \r\n\t\t\t\t\tdisabled />\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\t\t\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={s.row}>\r\n\t\t\t{cells}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SudokuCells;","import React from \"react\";\r\nimport SudokuCells from \"./SudokuCells.js\";\r\nimport s from \"./SudokuRows.module.css\";\r\n\r\nconst SudokuRows = (props) => {\r\n\tlet rows = props.grid.map((el, index) => {\r\n\t\treturn <SudokuCells row={el} \r\n\t\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\tchangeCell={props.changeCell}\r\n\t\t\t\t\t\t\tgameChecked={props.gameChecked}/> \r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={s.grid}>\r\n\t\t\t{rows}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SudokuRows;","import React from \"react\";\r\nimport SudokuRows from \"./SudokuRows/SudokuRows.js\";\r\nimport s from \"./Sudoku.module.css\";\r\nimport loader from \"./yinAndYang.png\";\r\nimport endGamePicture from \"./winner.gif\";\r\n\r\nconst Sudoku = (props) => {\r\n    let showGrid = () => {\r\n        props.createGrid();  \r\n    };\r\n    \r\n    let resetSudoku = () => {\r\n        props.resetSudoku(); \r\n    };\r\n\r\n    let checkSudoku = () => {\r\n        props.checkAnswers();\r\n    };\r\n    \r\n    let changeCell = props.changeCell;\r\n\r\n    return (\r\n    \t<div className={s.sudokuContainer}>\r\n    \t\t<div className={s.heading}>Sudoku</div>\r\n            {props.gameFinished ?\r\n            <> \r\n            <div className={s.loader}>\r\n                <img src={endGamePicture} className={s.gameWon} alt=\"You are the boss\"/>\r\n            </div> \r\n            <span type=\"text\" className={s.showLoading}>Прекрасная игра!</span>\r\n            <div className={s.buttonsBlock}>\r\n                <button onClick={showGrid} className={s.disabled} disabled>Начать</button>\r\n                <button onClick={checkSudoku} className={s.disabled} disabled>Проверить</button>\r\n                <button onClick={resetSudoku}>Выход</button>\r\n            </div>\r\n            </>\r\n            :\r\n            <>\r\n            <>\r\n            {props.isLoading ? \r\n            <div className={s.loader}>\r\n                <img src={loader} className={s.spinning} alt=\"Yin and Yang\"/>\r\n            </div> : \r\n            <SudokuRows grid={props.grid} \r\n                        changeCell={props.changeCell} \r\n                        gameChecked={props.gameChecked} />}\r\n            </>\r\n            <span type=\"text\" className={s.showLoading}>\r\n                {props.numberOfMistakes ? `Количество ошибок: ` + props.numberOfMistakes : `Введите число от 1 до 9`}\r\n            </span>\r\n            <div className={s.buttonsBlock}>\r\n                {props.gameStarted ? <>\r\n                    <button onClick={showGrid} className={s.disabled} disabled>Начать</button>\r\n                    <button onClick={checkSudoku}>Проверить</button>\r\n                    <button onClick={resetSudoku}>Выход</button>\r\n                    </> :\r\n                    <>\r\n                    <button onClick={showGrid}>Начать</button>\r\n                    <button onClick={checkSudoku} className={s.disabled} disabled>Проверить</button>\r\n                    <button onClick={resetSudoku} className={s.disabled} disabled>Выход</button>\r\n                    </>\r\n                }\r\n            </div>\r\n            </>\r\n        }\r\n    \t</div>\r\n    )\r\n};\r\n\r\nexport default Sudoku;","import {\r\n    resetSudoku,\r\n    createGrid,\r\n    changeCell,\r\n    toggleStartButton,\r\n    checkAnswers\r\n} from \"../../redux/sudoku-reducer.js\";\r\nimport Sudoku from \"./Sudoku.js\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        grid: state.sudokuPage.grid,\r\n        isLoading: state.sudokuPage.isLoading,\r\n        gameStarted: state.sudokuPage.gameStarted,\r\n        gameChecked: state.sudokuPage.gameChecked,\r\n        numberOfMistakes: state.sudokuPage.numberOfMistakes,\r\n        gameFinished: state.sudokuPage.gameFinished\r\n    }\r\n};\r\n\r\nconst SudokuContainer = connect(mapStateToProps, {\r\n    createGrid, resetSudoku, changeCell, toggleStartButton, checkAnswers\r\n})(Sudoku);\r\n\r\n\r\nexport default SudokuContainer;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport s from './Articles.module.css';\r\n\r\nconst Events = (props) => {\r\n\tconst [data, setData] = useState({ hits: [] });\r\n\tconst [query, setQuery] = useState('');\r\n\tconst [url, setUrl] = useState(\r\n\t\t'https://hn.algolia.com/api/v1/search?query=redux'\r\n\t);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [isError, setIsError] = useState(false);\r\n\tlet uniqueId = 1;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tsetIsError(false);\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst result = await axios(url);\r\n\t\t\t\tsetData(result.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetIsError(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [url])\r\n\r\n\treturn (\r\n\t\t<div className={s.articles}>\r\n\t\t\t<h1 className={s.articlesHeader}>Список статей</h1>\r\n\t\t\t<input \r\n\t\t\t\tvalue={query} \r\n\t\t\t\tplaceholder=\"введите запрос\"\r\n\t\t\t\tonChange={event => setQuery(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button type=\"button\" \r\n\t\t\t\t\tonClick={() => \r\n\t\t\t\t\t\tsetUrl(`https://hn.algolia.com/api/v1/search?query=${query}`)\r\n\t\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\tПоиск\r\n\t\t\t</button>\r\n\t\t\t{isError \r\n\t\t\t? <div>Крысы перегрызли кабель, запросы временно невозможны.</div>\r\n\t\t\t: <>{isLoading \r\n\t\t\t\t? <div className=\"preLoader\">Идет загрузка...</div>\r\n\t\t\t\t: <>{data.hits.some(item => item.url) \r\n\t\t\t\t\t? <ul>\r\n\t\t\t\t\t\t {data.hits.map((item, index) => {\r\n\t\t\t\t\t\t\tif (item.url) {\r\n\t\t\t\t\t\t\t\treturn <li key={uniqueId++}>\r\n\t\t\t\t\t\t\t\t\t<a href={item.url} rel=\"noreferrer noopener\" target=\"_blank\">{item.title}</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})} \r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t: <div>К сожалению, по данному запросу ничего не найдно</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</>\r\n\t\t\t}</>\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Events;","import React from 'react';\r\nimport './App.css';\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Header from \"./components/Header/Header\";\r\nimport {Route} from \"react-router-dom\";\r\nimport RouteGenerator from \"./components/RouteGenerator/RouteGenerator\";\r\nimport GalleryContainer from \"./components/Gallery/GalleryContainer\";\r\nimport SudokuContainer from \"./components/Sudoku/SudokuContainer.js\";\r\nimport Articles from'./components/Articles/Articles.js';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <div className='app-wrapper__content'>\r\n                <Route exact path='/' render={() =>\r\n                    <Profile/>}/>\r\n                <Route path='/profile' render={() =>\r\n                    <Profile/>}/>\r\n                <Route path='/route-generator' render={() =>\r\n                    <RouteGenerator/>}/>\r\n                <Route path='/gallery' render={() =>\r\n                    <GalleryContainer/>}/>\r\n                <Route path='/sudoku' render={() => \r\n                    <SudokuContainer />}/>\r\n                <Route path='/articles' render={() => \r\n                    <Articles />}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport store from './redux/redux-store';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </HashRouter>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}