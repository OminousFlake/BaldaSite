{"version":3,"sources":["components/Sudoku/Sudoku.module.css","components/Sudoku/SudokuRows/SudokuRows.module.css","components/Menu/Menu.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/RouteGenerator/RouteGenerator.module.css","components/Messages/Dialogues/Dialogues.module.css","components/Messages/Conversations/Conversation/Conversation.module.css","components/Gallery/Image/Image.module.css","components/Articles/Articles.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Messages/Messages.module.css","components/Messages/Dialogues/DIalogue/Dialogue.module.css","components/Messages/Conversations/Conversations.module.css","components/Gallery/Gallery.module.css","components/Sudoku/yinAndYang.png","components/Sudoku/winner.gif","redux/Images sync /^/.*/.jpg$","redux/Images/adventure.jpg","redux/Images/alpine.jpg","redux/Images/armadillo.jpg","redux/Images/brewery.jpg","redux/Images/cami.jpg","redux/Images/clouds.jpg","redux/Images/cooling-tower.jpg","redux/Images/geese.jpg","redux/Images/hosta-leaf.jpg","redux/Images/landscape.jpg","redux/Images/night.jpg","redux/Images/parrot.jpg","redux/Images/sailing-vessel.jpg","redux/Images/snail.jpg","redux/Images/squirrel.jpg","redux/Images/vintage.jpg","redux/Images/vw.jpg","redux/profile-reducer.js","redux/messages-reducer.js","redux/gallery-reducer.js","redux/sudoku-reducer.js","redux/redux-store.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Menu/Menu.js","components/Header/Header.js","components/Messages/Dialogues/DIalogue/Dialogue.js","components/Messages/Dialogues/Dialogues.js","components/Messages/Dialogues/DialoguesContainer.js","components/Messages/Conversations/Conversation/Conversation.js","components/Messages/Conversations/Conversations.js","components/Messages/Conversations/ConversationsContainer.js","components/RouteGenerator/RouteGenerator.js","components/Gallery/Image/Image.js","components/Gallery/Gallery.js","components/Gallery/GalleryContainer.js","components/Sudoku/SudokuRows/SudokuCells.js","components/Sudoku/SudokuRows/SudokuRows.js","components/Sudoku/Sudoku.js","components/Sudoku/SudokuContainer.js","components/Articles/Articles.js","App.js","index.js"],"names":["module","exports","sudokuContainer","heading","loader","gameWon","no-spinning","spinning","spin","buttonsBlock","showLoading","disabled","grid","row","cell","guessedCorrectly","guessedWrong","shake","nav","item","active","logo","user","imageBlock","userInfo","profileBackgroundPicture","postAdd","inputContainer","textAreaContainer","bubbleHelp","container","difficulties","buttons","generator","map","dialogues","messageSender","conversations","conversation","imageContainer","image","articles","post","header","messages","dialogue","images","__webpack_require__","p","./adventure.jpg","./alpine.jpg","./armadillo.jpg","./brewery.jpg","./cami.jpg","./clouds.jpg","./cooling-tower.jpg","./geese.jpg","./hosta-leaf.jpg","./landscape.jpg","./night.jpg","./parrot.jpg","./sailing-vessel.jpg","./snail.jpg","./squirrel.jpg","./vintage.jpg","./vw.jpg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","initialState","posts","date","message","newPostText","tooltip","profileReducer","state","arguments","length","undefined","action","type","copiedState","objectSpread","newText","newPost","Date","toLocaleString","trim","toConsumableArray","push","name","newMessageBody","messagesReducer","body","pictureName","galleryReducer","isLoading","gameStarted","gameChecked","numberOfMistakes","gameFinished","sudokuReducer","getRandomNumber","min","max","Math","floor","random","transposeGrid","gridLine","i","j","transposedGrid","swapRows","randomLine","temp","splice","randomPosition","apply","concat","swapRowAreas","rand","sudokuFuncs","transposedSwappedGrid","gappedGrid","gapsNumber","randLine","randElement","tempObject","value","userGuess","changeable","makeGaps","functionsArray","minChangesNumber","maxChangesNumber","timesToChange","finalGrid","randomiseGrid","initialLine","y","newGrid","slice","createBasicGrid","cellLocation","index","input","userInput","test","console","log","boolean","x","reducers","combineReducers","profilePage","messagesPage","galleryPage","sudokuPage","store","createStore","Post","props","react_default","a","createElement","className","s","MyPosts","postsElements","el","MyPosts_Post_Post","onChange","event","text","target","updatePostText","placeholder","onClick","addPost","reverse","MyPostsContainer","connect","dispatch","updatePostTextActionCreator","Profile","content","src","alt","MyPosts_MyPostsContainer","Menu","react_router_dom","to","activeClassName","Header","components_Menu_Menu","Dialogue","Dialogues","dialoguesElements","DIalogue_Dialogue","changeMessageBody","sendMessage","updateBodyMessageCreator","Conversation","path","Conversations","conversationsElements","Conversations_Conversation_Conversation","mapState","center","zoom","controls","RouteGenerator","address","route","randomiseCoordinates","setEasy","_this","updateRoute","setMedium","onYmapsLoad","ymaps","geoObjects","remove","setState","mapStateAutoApply","routingMode","multiRoute","then","add","error","alert","_this2","this","react_yandex_maps_umd_production_min","query","load","apikey","onLoad","instanceRef","React","Component","Image","require","Gallery","imageElements","Gallery_Image_Image","GalleryContainer","SudokuCells","changeCell","number","position","cells","toString","key","autoComplete","given","SudokuRows","rows","SudokuRows_SudokuCells","Sudoku","showGrid","createGrid","resetSudoku","checkSudoku","checkAnswers","Fragment","endGamePicture","Sudoku_SudokuRows_SudokuRows","SudokuContainer","location","toggleStartButton","Events","_useState","useState","hits","_useState2","slicedToArray","data","setData","_useState3","_useState4","setQuery","_useState5","_useState6","url","setUrl","_useState7","_useState8","setIsLoading","_useState9","_useState10","isError","setIsError","uniqueId","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","t0","stop","fetchData","articlesHeader","some","href","rel","title","App","components_Header_Header","react_router","exact","render","components_Profile_Profile","components_RouteGenerator_RouteGenerator","Gallery_GalleryContainer","Sudoku_SudokuContainer","Articles","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.78384c35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sudokuContainer\":\"Sudoku_sudokuContainer__1T-UZ\",\"heading\":\"Sudoku_heading__2qscJ\",\"loader\":\"Sudoku_loader__hO3A6\",\"gameWon\":\"Sudoku_gameWon__3dzRb\",\"no-spinning\":\"Sudoku_no-spinning__3UGnF\",\"spinning\":\"Sudoku_spinning__2YiZY\",\"spin\":\"Sudoku_spin__1bpX6\",\"buttonsBlock\":\"Sudoku_buttonsBlock__3gIMV\",\"showLoading\":\"Sudoku_showLoading__2mZm0\",\"disabled\":\"Sudoku_disabled__26S0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"SudokuRows_grid__1H0RZ\",\"row\":\"SudokuRows_row__35wDV\",\"cell\":\"SudokuRows_cell__1u8nr\",\"guessedCorrectly\":\"SudokuRows_guessedCorrectly__DthSD\",\"guessedWrong\":\"SudokuRows_guessedWrong__3Eqaq\",\"shake\":\"SudokuRows_shake__24YpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__GeFvv\",\"item\":\"Menu_item__1xNPZ\",\"active\":\"Menu_active__1Wumc\",\"logo\":\"Menu_logo__dzRIK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Profile_user__2VHXv\",\"imageBlock\":\"Profile_imageBlock__1j2kU\",\"userInfo\":\"Profile_userInfo__3GO_1\",\"profileBackgroundPicture\":\"Profile_profileBackgroundPicture__3pPwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postAdd\":\"MyPosts_postAdd__22l-3\",\"inputContainer\":\"MyPosts_inputContainer__2qTV1\",\"textAreaContainer\":\"MyPosts_textAreaContainer__1r8CC\",\"bubbleHelp\":\"MyPosts_bubbleHelp__1tCZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RouteGenerator_container__i4Xn6\",\"difficulties\":\"RouteGenerator_difficulties__1F_8S\",\"buttons\":\"RouteGenerator_buttons__LAu-k\",\"generator\":\"RouteGenerator_generator__cSuJ-\",\"map\":\"RouteGenerator_map__11rLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogues_container__3JL9V\",\"dialogues\":\"Dialogues_dialogues__2ERiR\",\"messageSender\":\"Dialogues_messageSender__ZUdyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversations\":\"Conversation_conversations__3cwJu\",\"conversation\":\"Conversation_conversation__3S5Xq\",\"active\":\"Conversation_active__3tcXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"Image_imageContainer__3Y7h3\",\"image\":\"Image_image__132kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articles\":\"Articles_articles__2HHkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__wUXlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3tUQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1nWjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue\":\"Dialogue_dialogue__QZvME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversations\":\"Conversations_conversations__E7i_L\",\"conversation\":\"Conversations_conversation__1130j\",\"active\":\"Conversations_active__2eRtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"Gallery_images__1alOp\"};","module.exports = __webpack_public_path__ + \"static/media/yinAndYang.6245036f.png\";","module.exports = __webpack_public_path__ + \"static/media/winner.9d9a0109.gif\";","var map = {\n\t\"./adventure.jpg\": 77,\n\t\"./alpine.jpg\": 78,\n\t\"./armadillo.jpg\": 79,\n\t\"./brewery.jpg\": 80,\n\t\"./cami.jpg\": 81,\n\t\"./clouds.jpg\": 82,\n\t\"./cooling-tower.jpg\": 83,\n\t\"./geese.jpg\": 84,\n\t\"./hosta-leaf.jpg\": 85,\n\t\"./landscape.jpg\": 86,\n\t\"./night.jpg\": 87,\n\t\"./parrot.jpg\": 88,\n\t\"./sailing-vessel.jpg\": 89,\n\t\"./snail.jpg\": 90,\n\t\"./squirrel.jpg\": 91,\n\t\"./vintage.jpg\": 92,\n\t\"./vw.jpg\": 93\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 76;","module.exports = __webpack_public_path__ + \"static/media/adventure.69353439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alpine.a856e1d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/armadillo.a4b55498.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brewery.69899df3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cami.e06ceeb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.7ca93eac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cooling-tower.5cd59bc5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geese.785f2bd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hosta-leaf.c5a2ba3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landscape.ee25fee9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night.3ede16b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parrot.8b4d8100.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sailing-vessel.a3ba975a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snail.fe153fa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squirrel.7d8655b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vintage.e0152533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vw.7167b10e.jpg\";","const addPost = 'ADD-POST';\r\nconst updatePostText = 'UPDATE-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, date: '26.05.2019, 16:35:56', message: 'Мой первый пост. Тест'},\r\n        {\r\n            id: 2,\r\n            date: '27.05.2019, 11:31:56',\r\n            message: 'В прошлом посту забыл точку. Поэтому добавлю две в конце этого..'\r\n        },\r\n        {id: 3, date: '28.05.2019, 15:11:54', message: 'Добавил супер страшный скролл, зато крутить можно!'}\r\n    ],\r\n    newPostText: '',\r\n    tooltip: false\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case updatePostText: {\r\n            let copiedState = {...state};\r\n            copiedState.newPostText = action.newText;\r\n            if (copiedState.newPostText.length > 0) {\r\n                copiedState.tooltip = false;\r\n            }\r\n            return copiedState;\r\n        }\r\n        case addPost: {\r\n            let copiedState = {...state};\r\n            let newPost = {\r\n                id: copiedState.posts.length + 1,\r\n                date: new Date().toLocaleString('ru'),\r\n                message: copiedState.newPostText\r\n            };\r\n            if (copiedState.newPostText.length > 0 && copiedState.newPostText.trim() !== '') {\r\n                copiedState.posts = [...state.posts];\r\n                copiedState.posts.push(newPost);\r\n                copiedState.newPostText = '';\r\n                return copiedState;\r\n            } else {\r\n                copiedState.tooltip = true;\r\n                return copiedState;\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: addPost});\r\n\r\nexport const updatePostTextActionCreator = (text) => ({type: updatePostText, newText: text});\r\n\r\nexport default profileReducer;","const updateMessageBody = 'UPDATE-MESSAGE-BODY';\r\nconst sendMessage = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    conversations: [\r\n        {id: 1, name: 'Mark'},\r\n        {id: 2, name: 'Bob'},\r\n        {id: 3, name: 'Julia'},\r\n    ],\r\n    dialogues: [\r\n        {id: 1, message: 'Hello!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Have you watched Avengers?'},\r\n        {id: 4, message: 'Wow!'},\r\n    ],\r\n    newMessageBody: ''\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case updateMessageBody: {\r\n            let copiedState = {...state};\r\n            copiedState.newMessageBody = action.body;\r\n            return copiedState;\r\n        }\r\n        case sendMessage: {\r\n            let copiedState = {...state};\r\n            copiedState.dialogues = [...state.dialogues];\r\n            let body = copiedState.newMessageBody;\r\n            copiedState.dialogues.push({id: 6, message: body});\r\n            copiedState.newMessageBody = '';\r\n            return copiedState;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const updateBodyMessageCreator = (body) =>  ({type: updateMessageBody, body: body });\r\nexport const sendMessageCreator = () => ({type: sendMessage});\r\n\r\nexport default messagesReducer;","const showPictureName = 'SHOW-PICTURE-NAME';\r\n\r\nlet initialState = {\r\n    images: [\r\n        {id: 1, name: 'adventure'},\r\n        {id: 2, name: 'alpine'},\r\n        {id: 3, name: 'armadillo'},\r\n        {id: 4, name: 'brewery'},\r\n        {id: 5, name: 'cami'},\r\n        {id: 6, name: 'clouds'},\r\n        {id: 7, name: 'cooling-tower'},\r\n        {id: 9, name: 'geese'},\r\n        {id: 10, name: 'hosta-leaf'},\r\n        {id: 11, name: 'landscape'},\r\n        {id: 12, name: 'night'},\r\n        {id: 13, name: 'parrot'},\r\n        {id: 14, name: 'sailing-vessel'},\r\n        {id: 15, name: 'snail'},\r\n        {id: 16, name: 'squirrel'},\r\n        {id: 17, name: 'vintage'},\r\n        {id: 18, name: 'vw'}\r\n    ],\r\n    pictureName: ''\r\n};\r\n\r\nconst galleryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case showPictureName: {\r\n            let copiedState = {...state};\r\n            copiedState.pictureName = !copiedState.pictureName;\r\n            return copiedState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const showPictureNameCreator = () => ({type: showPictureName});\r\n\r\n\r\nexport default galleryReducer;","const RESET_SUDOKU = 'RESET_SUDOKU';\r\nconst CREATE_GRID = 'CREATE_GRID';\r\nconst CHANGE_CELL = 'CHANGE_CELL';\r\nconst TOGGLE_START_BUTTON = 'TOGGLE_START_BUTTON';\r\nconst CHECK_ANSWERS = 'CHECK_ANSWERS';\r\nlet initialState = {\r\n    grid: [],\r\n    isLoading: true,\r\n    gameStarted: false,\r\n    gameChecked: false,\r\n    numberOfMistakes: 0,\r\n    gameFinished: false\r\n};\r\n\r\nconst sudokuReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_GRID: {\r\n            let copiedState = {...state};\r\n\r\n            function createBasicGrid() {\r\n                let newGrid = [];\r\n                var blockNums = 3;\r\n                var linesNums = 3;\r\n                var maxNumberOfLineElements = 9;\r\n                var initialLine, temp;\r\n                var j, i, y;\r\n\r\n                for (j = 0; j < blockNums; j++) {\r\n                    initialLine = [];\r\n                    for (y = 1; y <= maxNumberOfLineElements; y++) {\r\n                        var tempObject = {};\r\n                        tempObject.value = y;\r\n                        initialLine.push(tempObject);\r\n                    }\r\n                    initialLine = initialLine.concat(initialLine.splice(0, j));\r\n                    temp = [...initialLine];\r\n                    for (i = 0; i < linesNums; i++) {\r\n                        newGrid.push(temp);\r\n                        temp = temp.slice(3).concat(temp.slice(0, 3));\r\n                    } \r\n                }\r\n                return newGrid;\r\n            }\r\n\r\n\r\n            function getRandomNumber(min, max) {\r\n                var randomNumber = Math.floor(min + Math.random() * (max + 1 - min));\r\n                return randomNumber;\r\n            }\r\n            \r\n            function transposeGrid(grid) {\r\n                var transposedGrid = [];\r\n                var gridLine;\r\n                var i, j;\r\n\r\n                for (i = 0; i < grid.length; i++) {\r\n                    gridLine = [];\r\n                    for (j = 0; j < grid.length; j++) {\r\n                        gridLine.push(grid[j][i]);\r\n                    }\r\n                    transposedGrid.push(gridLine);\r\n                }\r\n                return transposedGrid;\r\n            }\r\n\r\n            function swapRows(grid) {\r\n                var i;\r\n                for (i = 0; i < grid.length; i += 3) {\r\n                    var randomLine = getRandomNumber(i, i + 2);\r\n                    var temp = grid.splice(randomLine, 1);\r\n                    var randomPosition = getRandomNumber(i, i + 1);\r\n                    grid.splice(randomPosition, 0, ...temp);\r\n                }\r\n                return grid;\r\n            }\r\n\r\n            function swapColumns(grid) {\r\n                var transposedGrid = transposeGrid(grid);\r\n\r\n                var transposedSwappedGrid = swapRows(transposedGrid);\r\n\r\n                var swappedColumnsGrid = transposeGrid(transposedSwappedGrid);\r\n\r\n                return swappedColumnsGrid;\r\n            }\r\n\r\n            function swapRowAreas(grid) {\r\n                var temp,\r\n                    rand,\r\n                    i;\r\n\r\n                for (i = 0; i < grid.length; i = i + 3) {\r\n                    temp = grid.splice(i, i + 3);\r\n                    rand = getRandomNumber(0, 2) * 3;\r\n                    grid.splice(rand, 0, ...temp);\r\n                }\r\n                \r\n                return grid;\r\n            }\r\n\r\n            function swapColumnAreas(grid) {\r\n                var transposedGrid = transposeGrid(grid);\r\n\r\n                var transposedSwappedGrid = swapRowAreas(transposedGrid);\r\n\r\n                var swappedColumnAreasGrid = transposeGrid(transposedSwappedGrid);\r\n\r\n                return swappedColumnAreasGrid;\r\n\r\n            }\r\n\r\n            var sudokuFuncs = [transposeGrid, \r\n                                swapRows, \r\n                                swapColumns, \r\n                                swapRowAreas, \r\n                                swapColumnAreas];\r\n\r\n            function randomiseGrid(grid, functionsArray, minChangesNumber, maxChangesNumber) {\r\n                var timesToChange = getRandomNumber(minChangesNumber, maxChangesNumber);\r\n                var randomFunctionNumber;\r\n                var finalGrid = grid;\r\n                var newGrid,\r\n                    i;\r\n\r\n                for (i = 0; i < timesToChange; i++) {\r\n                    randomFunctionNumber = getRandomNumber(0, functionsArray.length - 1);\r\n                    newGrid = functionsArray[randomFunctionNumber](finalGrid);\r\n                    finalGrid = newGrid;\r\n                }  \r\n                \r\n                return finalGrid;\r\n            }\r\n\r\n            function makeGaps(grid, gapsNumber) {\r\n                var maxGapsNumber = 80;\r\n                var randLine,\r\n                    randElement,\r\n                    i;\r\n\r\n                if(gapsNumber < maxGapsNumber) {\r\n                    for (i = 1; i <= gapsNumber; i++) {\r\n                        randLine = getRandomNumber(0, grid.length - 1);\r\n                        randElement = getRandomNumber(0, grid[0].length - 1);\r\n                        if (grid[randLine][randElement]) {\r\n                            var tempObject = {\r\n                            value: grid[randLine][randElement].value,\r\n                            userGuess: '',\r\n                            changeable: true,\r\n                            guessedCorrectly: false\r\n                            };\r\n                            grid[randLine].splice(randElement, 1, tempObject);\r\n                        } else {\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n                return grid;\r\n            }\r\n\r\n            let basicGrid = createBasicGrid();\r\n            let randomGrid = randomiseGrid(basicGrid, sudokuFuncs, 100, 200);\r\n            let gappedGrid = makeGaps(randomGrid, 2);\r\n            copiedState.grid = gappedGrid;\r\n            copiedState.isLoading = false;\r\n            copiedState.gameStarted = true;\r\n                \r\n            return copiedState;\r\n        }\r\n        case RESET_SUDOKU: {\r\n            let copiedState = {...state};\r\n            copiedState.grid = [];\r\n            copiedState.isLoading = true;\r\n            copiedState.gameStarted = false;\r\n            copiedState.gameChecked = false;\r\n            copiedState.numberOfMistakes = 0;\r\n            copiedState.gameFinished = false;\r\n            return copiedState;\r\n        }\r\n        case CHANGE_CELL: {\r\n            let copiedState = {...state};\r\n            copiedState.grid = [...state.grid];\r\n            if (copiedState.grid.length > 0) {\r\n                for (let i = 0; i < copiedState.grid.length; i++) {\r\n                    copiedState.grid[i] = [...state.grid[i]];\r\n                    for (let j = 0; j < copiedState.grid[i].length; j++) {\r\n                        copiedState.grid[i][j] = {...state.grid[i][j]};\r\n                    }\r\n                }\r\n            }\r\n\r\n            let row = +action.cellLocation.slice(0, 1);\r\n            let index = +action.cellLocation.slice(1);\r\n            let input = action.userInput;\r\n            let acceptedRange = /[1-9]/;\r\n            if ((acceptedRange.test(input) || !input) && input.length < 2) {\r\n                copiedState.grid[row][index].userGuess = input;\r\n            } else {\r\n                console.log('It must be a number from 1 to 9!');\r\n            }\r\n            return copiedState;\r\n        }\r\n        case TOGGLE_START_BUTTON: {\r\n            let copiedState = {...state};\r\n            copiedState.gameStarted = action.boolean;\r\n            return copiedState;\r\n        }\r\n        case CHECK_ANSWERS: {\r\n            let copiedState = {...state};\r\n            copiedState.numberOfMistakes = 0;\r\n            copiedState.grid = [...state.grid];\r\n            if (copiedState.grid.length > 0) {\r\n                for (let i = 0; i < copiedState.grid.length; i++) {\r\n                    copiedState.grid[i] = [...state.grid[i]];\r\n                    for (let j = 0; j < copiedState.grid[i].length; j++) {\r\n                        copiedState.grid[i][j] = {...state.grid[i][j]};\r\n                    }\r\n                }\r\n            }\r\n            for (let x = 0; x < copiedState.grid.length; x++) {\r\n                for (let y = 0; y < copiedState.grid[x].length; y++) {\r\n                    if (copiedState.grid[x][y].userGuess || copiedState.grid[x][y].userGuess === '') {\r\n                        if (copiedState.grid[x][y].userGuess != copiedState.grid[x][y].value) {\r\n                            copiedState.numberOfMistakes++;\r\n                            copiedState.grid[x][y].guessedCorrectly = false;\r\n                        } else {\r\n                            copiedState.grid[x][y].guessedCorrectly = true;\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n            if (!copiedState.numberOfMistakes) {\r\n                copiedState.gameFinished = true;\r\n            }\r\n            copiedState.gameChecked = true;\r\n            \r\n            return copiedState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const createGrid = () => ({type: CREATE_GRID});\r\nexport const resetSudoku = () => ({type: RESET_SUDOKU});\r\nexport const changeCell = (number, location) => ({\r\n    type: CHANGE_CELL, userInput: number, cellLocation: location});\r\nexport const toggleStartButton = () => ({type: TOGGLE_START_BUTTON});\r\nexport const checkAnswers = () => ({type: CHECK_ANSWERS});\r\n\r\nexport default sudokuReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport galleryReducer from \"./gallery-reducer\";\r\nimport sudokuReducer from \"./sudoku-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        messagesPage: messagesReducer,\r\n        galleryPage: galleryReducer,\r\n        sudokuPage: sudokuReducer\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <p>{props.date}</p>\r\n            <br />\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map((el) => <Post message={el.message} date={el.date}/>);\r\n\r\n    let onPostChange = (event) => {\r\n        let text = event.target.value;\r\n        props.updatePostText(text);\r\n    };\r\n\r\n    let onPostAdd = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.postAdd}>\r\n                <h1>Мои посты</h1>\r\n                <div className={s.inputContainer}>\r\n                    <div className={s.textAreaContainer}>\r\n                            <textarea onChange={onPostChange}\r\n                                      value={props.newPostText}\r\n                                      placeholder='(!)Важное сообщение'/>\r\n                        <span>\r\n                        {props.tooltip ?\r\n                            <div className={s.bubbleHelp}>\r\n                                <p>Не надо пустых постов!</p>\r\n                            </div> :\r\n                            ''}\r\n                        </span>\r\n                    </div>\r\n                    <button onClick={onPostAdd}>Добавить</button>\r\n                </div>\r\n            </div>\r\n            {postsElements.reverse()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {\r\n    addPostActionCreator,\r\n    updatePostTextActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        tooltip: state.profilePage.tooltip\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePostText: (text) => {\r\n            dispatch(updatePostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <img className={s.profileBackgroundPicture} src='https://english.cdn.zeenews.com/sites/default/files/2014/12/02/298357-sea-2.jpg' alt='' />\r\n            </div>\r\n            <div className={s.user}>\r\n                <div className={s.imageBlock}>\r\n                    <img src='https://www.zaryadyepark.ru/upload/iblock/d65/d65abfbf1d6f83c1765b734c47c79cb5.jpg' alt=''/>\r\n                </div>\r\n                <div className={s.userInfo}>\r\n                    <h1>Информация обо мне:</h1>\r\n                    <p>Нелучшая моя фотография, но какая есть! Зато видно,\r\n                        что я работаю непокладая рук, а иногда и ног!</p>\r\n                </div>\r\n            </div>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Menu.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Профиль</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>\r\n                <NavLink to='/messages' activeClassName={s.active}>Контакты</NavLink>\r\n            </div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to='/route-generator' activeClassName={s.active}>Карта</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/gallery' activeClassName={s.active}>Галлерея</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/sudoku' activeClassName={s.active}>Судоку</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/articles' activeClassName={s.active}>Статьи</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport Menu from './../Menu/Menu.js';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://seeklogo.com/images/A/alliance-logo-BDD77C0478-seeklogo.com.png' alt='' />\r\n            <Menu />\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from \"./Dialogue.module.css\";\r\n\r\nconst Dialogue = (props) => {\r\n  return (\r\n      <div className={s.dialogue}>\r\n          <p>{props.message}</p>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Dialogue;","import React from 'react';\r\nimport s from \"./Dialogues.module.css\";\r\nimport Dialogue from \"./DIalogue/Dialogue\";\r\n\r\nconst Dialogues = (props) => {\r\n    let dialoguesElements = props.dialogues.map(el => <Dialogue message={el.message} />);\r\n\r\n    let onMessageBodyChange = (event) => {\r\n        let body = event.target.value;\r\n        props.changeMessageBody(body);\r\n    };\r\n\r\n    let onMessageSend = () => {\r\n        if (props.newMessageBody === '') {\r\n            console.log('Change the message');\r\n        } else {\r\n            props.sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogues}>\r\n                { dialoguesElements }\r\n            </div>\r\n            <div className={s.messageSender}>\r\n                <textarea onChange={onMessageBodyChange} value={props.newMessageBody} placeholder='Text your message here' />\r\n                <button onClick={onMessageSend}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogues;","import React from 'react';\r\nimport {sendMessageCreator, updateBodyMessageCreator} from \"../../../redux/messages-reducer\";\r\nimport Dialogues from \"./Dialogues\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogues: state.messagesPage.dialogues,\r\n        newMessageBody: state.messagesPage.newMessageBody\r\n    }\r\n};\r\nconst mapDispatchTooProps = (dispatch) => {\r\n    return {\r\n        changeMessageBody: (body) => {\r\n            dispatch(updateBodyMessageCreator(body));\r\n            },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst DialoguesContainer = connect(mapStateToProps, mapDispatchTooProps)(Dialogues);\r\n\r\nexport default DialoguesContainer;","import React from 'react';\r\nimport s from './Conversation.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Conversation = (props) => {\r\n    let path = '/messages/' + props.id;\r\n  return (\r\n      <div className={s.conversation}>\r\n          <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\nimport s from './Conversations.module.css'\r\nimport Conversation from \"./Conversation/Conversation\";\r\n\r\nconst Conversations = (props) => {\r\n    let conversationsElements = props.conversations.map(el => <Conversation name={el.name} id={el.id}/>);\r\n\r\n    return (\r\n        <div className={s.conversations}>\r\n            { conversationsElements }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Conversations;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Conversations from \"./Conversations\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      conversations: state.messagesPage.conversations\r\n  }\r\n};\r\n\r\nconst mapDispatchTooProps = () => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchTooProps)(Conversations);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport {YMaps, Map} from 'react-yandex-maps';\r\nimport s from './RouteGenerator.module.css'\r\n\r\nconst mapState = {\r\n    center: [55.751574, 37.618960],\r\n    zoom: 11,\r\n    controls: []\r\n};\r\n\r\nclass RouteGenerator extends React.Component {\r\n    state = {\r\n        address: [],\r\n        route: null\r\n    };\r\n\r\n    randomiseCoordinates = (min, max) =>  {\r\n        return  min + Math.random() * (max - min);\r\n    };\r\n\r\n    setEasy = () => {\r\n        this.state.address = [\r\n            [this.randomiseCoordinates(55.72, 55.77), this.randomiseCoordinates(37.58, 37.63)],\r\n            [this.randomiseCoordinates(55.72, 55.77), this.randomiseCoordinates(37.58, 37.63)]\r\n        ];\r\n        this.updateRoute(this.state.address);\r\n    };\r\n\r\n    setMedium = () => {\r\n        this.state.address = [\r\n            [this.randomiseCoordinates(55.70, 55.79), this.randomiseCoordinates(37.56, 37.65)],\r\n            [this.randomiseCoordinates(55.70, 55.79), this.randomiseCoordinates(37.56, 37.65)]\r\n        ];\r\n        this.updateRoute(this.state.address);\r\n    };\r\n\r\n    onYmapsLoad = ymaps => {\r\n        this.ymaps = ymaps;\r\n    };\r\n\r\n    updateRoute = address => {\r\n        if (this.state.route) {\r\n            this.map.geoObjects.remove(this.state.route);\r\n        }\r\n        this.setState(\r\n            {\r\n                address,\r\n                route: null\r\n            },\r\n            () => {\r\n                const address = this.state.address;\r\n                if (address.length > 1) {\r\n                    this.ymaps\r\n                        .route(address, {\r\n                            mapStateAutoApply: true,\r\n                            routingMode: 'pedestrian',\r\n                            multiRoute: true\r\n                        })\r\n                        .then(\r\n                            route => {\r\n                                this.map.geoObjects.add(route);\r\n                                this.setState({ route });\r\n                            },\r\n                            error => alert(error.message)\r\n                        );\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.container}>\r\n                <div className={s.difficulties}>\r\n                    <p>Случайный маршрут по Москве!</p>\r\n                    <div className={s.buttons}>\r\n                        <button onClick={this.setEasy}>Легкий</button>\r\n                        <button onClick={this.setMedium}>Средний</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.container}>\r\n                    <p>Удачи в новом маршруте!</p>\r\n                    <YMaps query={{\r\n                            load: \"package.full\", \r\n                            apikey: \"6dcad05d-5db3-4d4c-a137-ce3f7b46a1bb\" }}>\r\n                        <Map\r\n                            state={mapState}\r\n                            onLoad={this.onYmapsLoad}\r\n                            instanceRef={map => (this.map = map)}\r\n                            className={s.map}\r\n                        />\r\n                    </YMaps>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouteGenerator;\r\n\r\n","import React from 'react';\r\nimport s from './Image.module.css';\r\n\r\nconst Image = (props) => {\r\n    return (\r\n        <div className={s.imageContainer}>\r\n            <img src={require('../../../redux/Images/' + props.name + '.jpg')} alt='' className={s.image} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport s from './Gallery.module.css';\r\nimport Image from \"./Image/Image\";\r\n\r\nconst Gallery = (props) => {\r\n    let imageElements = props.images.map((el) => <Image name={el.name}/>);\r\n    return (\r\n            <div className={s.images}>\r\n                {imageElements}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Gallery;","\r\nimport Gallery from \"./Gallery\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        images: state.galleryPage.images\r\n    }\r\n};\r\n\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePostText: (text) => {\r\n            dispatch(updatePostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        toggleTooltip: () => {\r\n            dispatch(toggleTooltipCreator());\r\n        }\r\n    }\r\n};\r\n*/\r\n\r\nconst GalleryContainer = connect(mapStateToProps, {})(Gallery);\r\n\r\n\r\nexport default GalleryContainer;","import React from \"react\";\r\nimport s from \"./SudokuRows.module.css\";\r\n\r\nconst SudokuCells = (props) => {\r\n\r\n\tlet changeCell = (event) => {\r\n\t\tlet number = event.target.value;\r\n\t\tlet position = event.target.id;\r\n\t\tprops.changeCell(number, position);\r\n\t}\r\n\r\n\r\n\tlet cells = props.row.map((el, index) => {\r\n\t\tif (!props.gameChecked) {\r\n\t\t\tif (el.changeable) {\r\n\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.userGuess} \r\n\t\t\t\t\tclassName={s.cell} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} />\r\n\t\t\t} else {\r\n\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.value} \r\n\t\t\t\t\tclassName={s.cell} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} \r\n\t\t\t\t\tdisabled />\r\n\t\t\t}\t\t\r\n\t\t} else {\r\n\t\t\tif (el.changeable) {\r\n\t\t\t\tif (el.guessedCorrectly) {\r\n\t\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.userGuess} \r\n\t\t\t\t\tclassName={`${s.cell} ${s.guessedCorrectly}`} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} />\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.userGuess} \r\n\t\t\t\t\tclassName={`${s.cell} ${s.guessedWrong}`} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} />\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treturn <input id={props.id.toString() + index.toString()}\r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={el.value} \r\n\t\t\t\t\tclassName={`${s.cell} ${s.given}`} \r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={changeCell} \r\n\t\t\t\t\tdisabled />\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\t\t\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={s.row}>\r\n\t\t\t{cells}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SudokuCells;","import React from \"react\";\r\nimport SudokuCells from \"./SudokuCells.js\";\r\nimport s from \"./SudokuRows.module.css\";\r\n\r\nconst SudokuRows = (props) => {\r\n\tlet rows = props.grid.map((el, index) => {\r\n\t\treturn <SudokuCells row={el} \r\n\t\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\tchangeCell={props.changeCell}\r\n\t\t\t\t\t\t\tgameChecked={props.gameChecked}/> \r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={s.grid}>\r\n\t\t\t{rows}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SudokuRows;","import React from \"react\";\r\nimport SudokuRows from \"./SudokuRows/SudokuRows.js\";\r\nimport s from \"./Sudoku.module.css\";\r\nimport loader from \"./yinAndYang.png\";\r\nimport endGamePicture from \"./winner.gif\";\r\n\r\nconst Sudoku = (props) => {\r\n    let showGrid = () => {\r\n        props.createGrid();  \r\n    };\r\n    \r\n    let resetSudoku = () => {\r\n        props.resetSudoku(); \r\n    };\r\n\r\n    let checkSudoku = () => {\r\n        props.checkAnswers();\r\n    };\r\n    \r\n    let changeCell = props.changeCell;\r\n\r\n    return (\r\n    \t<div className={s.sudokuContainer}>\r\n    \t\t<div className={s.heading}>Sudoku</div>\r\n            {props.gameFinished ?\r\n            <> \r\n            <div className={s.loader}>\r\n                <img src={endGamePicture} className={s.gameWon} alt=\"You are the boss\"/>\r\n            </div> \r\n            <span type=\"text\" className={s.showLoading}>Прекрасная игра!</span>\r\n            <div className={s.buttonsBlock}>\r\n                <button onClick={showGrid} className={s.disabled} disabled>Начать</button>\r\n                <button onClick={checkSudoku} className={s.disabled} disabled>Проверить</button>\r\n                <button onClick={resetSudoku}>Выход</button>\r\n            </div>\r\n            </>\r\n            :\r\n            <>\r\n            <>\r\n            {props.isLoading ? \r\n            <div className={s.loader}>\r\n                <img src={loader} className={s.spinning} alt=\"Yin and Yang\"/>\r\n            </div> : \r\n            <SudokuRows grid={props.grid} \r\n                        changeCell={props.changeCell} \r\n                        gameChecked={props.gameChecked} />}\r\n            </>\r\n            <span type=\"text\" className={s.showLoading}>\r\n                {props.numberOfMistakes ? `Количество ошибок: ` + props.numberOfMistakes : `Введите число от 1 до 9`}\r\n            </span>\r\n            <div className={s.buttonsBlock}>\r\n                {props.gameStarted ? <>\r\n                    <button onClick={showGrid} className={s.disabled} disabled>Начать</button>\r\n                    <button onClick={checkSudoku}>Проверить</button>\r\n                    <button onClick={resetSudoku}>Выход</button>\r\n                    </> :\r\n                    <>\r\n                    <button onClick={showGrid}>Начать</button>\r\n                    <button onClick={checkSudoku} className={s.disabled} disabled>Проверить</button>\r\n                    <button onClick={resetSudoku} className={s.disabled} disabled>Выход</button>\r\n                    </>\r\n                }\r\n            </div>\r\n            </>\r\n        }\r\n    \t</div>\r\n    )\r\n};\r\n\r\nexport default Sudoku;","import React from 'react';\r\nimport {\r\n    resetSudoku,\r\n    createGrid,\r\n    changeCell,\r\n    toggleStartButton,\r\n    checkAnswers\r\n} from \"../../redux/sudoku-reducer.js\";\r\nimport Sudoku from \"./Sudoku.js\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        grid: state.sudokuPage.grid,\r\n        isLoading: state.sudokuPage.isLoading,\r\n        gameStarted: state.sudokuPage.gameStarted,\r\n        gameChecked: state.sudokuPage.gameChecked,\r\n        numberOfMistakes: state.sudokuPage.numberOfMistakes,\r\n        gameFinished: state.sudokuPage.gameFinished\r\n    }\r\n};\r\n\r\nconst SudokuContainer = connect(mapStateToProps, {\r\n    createGrid, resetSudoku, changeCell, toggleStartButton, checkAnswers\r\n})(Sudoku);\r\n\r\n\r\nexport default SudokuContainer;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport s from './Articles.module.css';\r\n\r\nconst Events = (props) => {\r\n\tconst [data, setData] = useState({ hits: [] });\r\n\tconst [query, setQuery] = useState('');\r\n\tconst [url, setUrl] = useState(\r\n\t\t'https://hn.algolia.com/api/v1/search?query=redux'\r\n\t);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [isError, setIsError] = useState(false);\r\n\tlet uniqueId = 1;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tsetIsError(false);\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst result = await axios(url);\r\n\t\t\t\tsetData(result.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetIsError(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [url])\r\n\r\n\treturn (\r\n\t\t<div className={s.articles}>\r\n\t\t\t<h1 className={s.articlesHeader}>Список статей</h1>\r\n\t\t\t<input \r\n\t\t\t\tvalue={query} \r\n\t\t\t\tplaceholder=\"введите запрос\"\r\n\t\t\t\tonChange={event => setQuery(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button type=\"button\" \r\n\t\t\t\t\tonClick={() => \r\n\t\t\t\t\t\tsetUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\r\n\t\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\tПоиск\r\n\t\t\t</button>\r\n\t\t\t{isError \r\n\t\t\t? <div>Крысы перегрызли кабель, запросы временно невозможны.</div>\r\n\t\t\t: <>{isLoading \r\n\t\t\t\t? <div className=\"preLoader\">Идет загрузка...</div>\r\n\t\t\t\t: <>{data.hits.some(item => item.url) \r\n\t\t\t\t\t? <ul>\r\n\t\t\t\t\t\t {data.hits.map((item, index) => {\r\n\r\n\t\t\t\t\t\t\tif (item.url) {\r\n\t\t\t\t\t\t\t\treturn <li key={uniqueId++}>\r\n\t\t\t\t\t\t\t\t\t<a href={item.url} rel=\"nofollow noopener\" target=\"_blank\">{item.title}</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})} \r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t: <div>К сожалению, по данному запросу ничего не найдно</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</>\r\n\t\t\t}</>\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Events;","import React from 'react';\r\nimport './App.css';\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Messages from \"./components/Messages/Messages\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport {Route} from \"react-router-dom\";\r\nimport RouteGenerator from \"./components/RouteGenerator/RouteGenerator\";\r\nimport GalleryContainer from \"./components/Gallery/GalleryContainer\";\r\nimport SudokuContainer from \"./components/Sudoku/SudokuContainer.js\";\r\nimport Articles from'./components/Articles/Articles.js';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <div className='app-wrapper__content'>\r\n                <Route exact path='/' render={() =>\r\n                    <Profile/>}/>\r\n                <Route path='/profile' render={() =>\r\n                    <Profile/>}/>\r\n                {/*<Route path='/messages' render={() =>\r\n                    <Messages/>}/>*/}\r\n                <Route path='/route-generator' render={() =>\r\n                    <RouteGenerator/>}/>\r\n                <Route path='/gallery' render={() =>\r\n                    <GalleryContainer/>}/>\r\n                <Route path='/sudoku' render={() => \r\n                    <SudokuContainer />}/>\r\n                <Route path='/articles' render={() => \r\n                    <Articles />}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport store from './redux/redux-store';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </HashRouter>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}